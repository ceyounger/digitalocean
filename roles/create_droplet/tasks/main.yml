---
# file: roles/create_droplet/tasks/main.yml

  - hosts: localhost
    gather_facts: no
    tasks:
      - name: Include vars
        include_vars: 
          dir: roles/create_droplet/vars
  
  # Create basic DigitalOcean droplet
      - name: create DigitalOcean droplet
        digital_ocean_droplet: 
          name: mytest01
          oauth_token: "{{ DO_API_TOKEN }}"
          unique_name: yes
          region: sfo2
          image: ubuntu-18-04-x64
          wait: yes
          wait_timeout: 500
          size_id: s-1vcpu-1gb
          state: present
          ssh_keys: [ '113055', '26017821', '26017817', '26017805', '26017812', '26017803', '26017837' ]
          ipv6: yes
          private_networking: no
          monitoring: yes
          backups: no
        register: mytest01
  
      - name: create DigitalOcean tag
        digital_ocean_tag:
          name: test
          oauth_token: "{{ DO_API_TOKEN }}"
          resource_id: "{{ mytest01.data.droplet.id }}"
          state: present
        register: tag_response
  
      - name: add new droplet to dynamic inventory
        add_host:
          name: "{{ mytest01.data.ip_address }}"
          groups: just_created
  
      - debug:
          msg: "ID is {{ mytest01.data.droplet.id }}, IP is {{ mytest01.data.ip_address }}"
  
  - hosts: just_created
    gather_facts: no
    tasks: 
      - name: Include vars
        include_vars: 
          dir: roles/create_droplet/vars
  
      - name: Wait for Droplet reachability
        wait_for_connection:
          delay: 30
          sleep: 5
          timeout: 60
        register: droplet_reachable
  
      - name: Install Prerequisites
        apt: name=aptitude update_cache=yes state=latest force_apt_get=yes
  
  # Sudo Group Setup
      - name: Make sure we have a 'wheel' group
        group:
          name: wheel
          state: present
  
      - name: Allow 'wheel' group to have passwordless sudo
        lineinfile:
          path: /etc/sudoers
          state: present
          regexp: '^%wheel'
          line: '%wheel ALL=(ALL) NOPASSWD: ALL'
          validate: '/usr/sbin/visudo -cf %s'
  
  # User + Key Setup
      - name: Create a new regular user with sudo privileges
        user:
          name: "{{ create_user }}"
          state: present
          groups: wheel
          append: true
          create_home: true
          uid: 10000
          shell: /bin/bash
  
      - name: Set authorized key for remote user
        authorized_key:
          user: "{{ create_user }}"
          state: present
          key: "{{ copy_local_key }}"
  
      - name: Disable password authentication for root
        lineinfile:
          path: /etc/ssh/sshd_config
          state: present
          regexp: '^#?PermitRootLogin'
          line: 'PermitRootLogin prohibit-password'
  
  # Install Packages
      - name: Update apt
        apt: update_cache=yes
  
      - name: Install required system packages
        apt: name={{ sys_packages }} state=latest
  
  # UFW Setup
      - name: UFW - Allow SSH connections
        ufw:
          rule: allow
          name: OpenSSH
  
      - name: UFW - Deny all other incoming traffic by default
        ufw:
          state: enabled
          policy: deny
          direction: incoming

      - name: Upgrade all packages to the latest version
        apt:
          name: "*"
          state: latest