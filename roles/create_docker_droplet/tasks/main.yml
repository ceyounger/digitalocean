---
# file: roles/create_docker_droplet/tasks/main.yml
    vars:
      do.unique_name: yes
      do.name: mytest01
      do.region: sfo2
      do.image: fedora-31-x64
      do.wait: yes
      do.wait_timeout: 500
      do.size_id: s-1vcpu-1gb
      do.state: present
      do.ssh_keys: [ '113055', '26017821', '26017817', '26017805', '26017812', '26017803', '26017837' ]
      do.ipv6: no
      do.private_networking: yes
      do.monitoring: yes
      do.backups: no

    tasks:
  # Create basic DigitalOcean droplet
    - name: create DigitalOcean Fedora Docker droplet
      digital_ocean_droplet: 
        name: "{{ droplet_name }}"
        oauth_token: "{{ DO_API_TOKEN }}"
        unique_name: "{{ do.unique_name }}"
        region: "{{ do.region }}"
        image: "{{ do.image }}"
        wait: "{{ do.wait }}"
        wait_timeout: "{{ do.wait_timeout }}"
        size_id: "{{ do.size_id }}"
        state: "{{ do.state }}"
        ssh_keys: "{{ do.ssh_keys }}"
        ipv6: "{{ do.ipv6 }}"
        private_networking: "{{ do.private_networking }}"
        monitoring: "{{ do.monitoring }}"
        backups: "{{ do.backups }}"
      register: created_droplet
  
    - name: create DigitalOcean tag
      digital_ocean_tag:
        name: docker
        oauth_token: "{{ DO_API_TOKEN }}"
        resource_id: "{{ created_droplet.data.droplet.id }}"
        state: present
      register: tag_response

    - debug:
        msg: "ID is {{ created_droplet.data.droplet.id }}"

    - debug:
        msg: "IP is {{ created_droplet.data.ip_address }}" 

    - name: add new droplet to dynamic inventory
      add_host:
        name: "{{ created_droplet.data.ip_address }}"
        groups: do

- hosts: do
  remote_user: root
  gather_facts: no

  vars:
    ansible_python_interpreter: /usr/bin/python3
    create_user: ceyounger
    copy_local_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    sys_packages: [ 'curl', 'vim', 'git' ]
    docker_packages: [ 'docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose' ]

  tasks: 
    - name: wait for port 22 to become available
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
      delegate_to: localhost

    - name: gather facts now that host is available
      setup: 
  
  # Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present
  
    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'
  
  # User + Key Setup
    - name: Create a new regular user with sudo privileges
        user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: yes
        create_home: yes
        uid: 10000
  
#    - name: Set authorized key for remote user
#      authorized_key:
#        user: "{{ create_user }}"
#        state: present
#        key: "{{ copy_local_key }}"
  
    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'
  
  # Update DNF and Install Packages
    - name: Update dnf
      dnf: update_cache=yes state=latest

    - name: Upgrade all packages to the latest version
      dnf:
        name: "*"
        state: latest  

    - name: Install required system packages
      dnf: name="{{ sys_packages }}" state=latest

  # Add Docker Repo
    - name: Enable Docker Repo
      command: "dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo"

  # Install Docker Components
    - name: Install Docker Components for Fedora
      dnf: name="{{ docker_packages }}" state=latest